package FileManager;

import java.io.*;
import java.net.URL;
import java.net.URLConnection;

public class FileManager {

    public boolean createDirectory (String path) {
        boolean directoryAlreadyCreated = false;
        File directory = new File(path);

        if (!directory.exists()) {
            directoryAlreadyCreated = directory.mkdirs();
        }

        return directoryAlreadyCreated;
    }

    public boolean downloadFile (String urlStr, String filePath) throws IOException {
        boolean fileAlreadyDownloaded = false;
        File file = new File(filePath);

        if (!file.isFile()) {
            System.out.println("File not found");

            int downloadedBytes = 0;
            float percentuale = 0;
            int timer = 0;

            URL url = new URL(urlStr);

            //Size of file
            URLConnection urlConnection = url.openConnection();
            urlConnection.connect();
            int fileSize = urlConnection.getContentLength();

            BufferedInputStream bis = new BufferedInputStream(url.openStream());
            FileOutputStream fis = new FileOutputStream(filePath);
            byte[] buffer = new byte[1024];
            int count = 0;
            
            System.out.println("Download is starting...");
            
            while ((count = bis.read(buffer, 0, 1024)) != -1) {
                fis.write(buffer, 0, count);

                downloadedBytes += count;
                timer++;

                if ((timer % 100) == 0) {
                    percentuale = ((float) downloadedBytes / fileSize) * 100;
                    System.out.printf("Downloading...: %.2f%%\n", percentuale);
                }
            }

            System.out.println("Downloading...: 100%");
            System.out.println("Download completed!!!");

            fis.close();
            bis.close();

            fileAlreadyDownloaded = true;
        } else {
            System.out.println("File already exist");
        }

        return fileAlreadyDownloaded;
    }

    public void deleteFolder(File folder) {
        File[] files = folder.listFiles();
        if (files!=null) {
            for (File f: files) {
                if (f.isDirectory()) {
                    deleteFolder(f);
                } else {
                    f.delete();
                }
            }
        }
        folder.delete();
    }

    public String getStream (InputStream inputStream) {
        StringBuffer stream = new StringBuffer();

        BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));

        String line = "";

        try {
            while ((line = reader.readLine())!= null) {
                stream.append(line + "\n");
            }
        } catch (IOException e) {}


        return stream.toString();
    }
}