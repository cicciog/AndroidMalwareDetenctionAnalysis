package FileManager;

public class Path {
    public static String getJarPath () {
        FileManager fileManager = new FileManager();

        return fileManager.getPathJar();
    }

    public static String getResourcePath () {
        String resourcePath = null;

        if (System.getProperty("os.name").contains("Windows")) {
            resourcePath = getJarPath() + "\\AMDA_Resource\\";
        } else {
            resourcePath = getJarPath() + "/AMDA_Resource/";
        }

        return resourcePath;
    }

    public static String getToolFolderPath() {
        String toolPath = null;

        if (System.getProperty("os.name").contains("Windows")) {
            toolPath = getResourcePath() + "tools\\";
        } else {
            toolPath = getResourcePath() + "tools/";
        }

        return toolPath;
    }

    public static String getApkSoFolderPath() {
        String apkSoPath = null;

        if (System.getProperty("os.name").contains("Windows")) {
            apkSoPath = getResourcePath() + "apkSo\\";
        } else {
            apkSoPath = getResourcePath() + "apkSo/";
        }

        return apkSoPath;
    }

    public static String getMalwareSoFolderPath() {
        String malwareSoPath = null;

        if (System.getProperty("os.name").contains("Windows")) {
            malwareSoPath = getResourcePath() + "malwareSo\\";
        } else {
            malwareSoPath = getResourcePath() + "malwareSo/";
        }

        return malwareSoPath;
    }

    public static String getApkToolPath () {
        return getToolFolderPath() + "apktool.jar";
    }

    public static String getObjDumpPath () {
        return getToolFolderPath() + "objdump.exe";
    }

    public static String getARMObjDumpPath () {
        return getToolFolderPath() + "arm-none-eabi-objdump.exe";
    }
}
